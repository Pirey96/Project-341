{"ast":null,"code":"import _slicedToArray from \"/Users/alexandreattar/Desktop/slack/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/alexandreattar/Desktop/slack/src/components/shared/FloatingLabelTextField.js\";\nimport React, { useState } from 'react';\nimport './../Main.css';\nexport const FloatingLabelTextField = props => {\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        inputLength = _useState2[0],\n        setInputLength = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        showError = _useState4[0],\n        setShowError = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        errorMessage = _useState6[0],\n        setErrorMessage = _useState6[1];\n\n  const remainingChar = event => {\n    const strLength = event.target.value.length;\n    setInputLength(strLength);\n    shouldDisplayErrorMessage(event);\n  };\n\n  const shouldDisplayErrorMessage = event => {\n    if (event.target.value.length < 1 || event.target.value.length > props.maxLength) {\n      const error = errorToDisplay();\n      setErrorMessage(error);\n      return setShowError(true);\n    }\n\n    return setShowError(false);\n  };\n\n  const errorToDisplay = () => {\n    return inputLength > props.maxlength ? props.errorNameTooLong : props.errorEmptyField;\n  };\n\n  return React.createElement(\"div\", {\n    className: \"container__floatingField\",\n    onChange: remainingChar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"floatingField_container--header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"floatingField__header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, props.header), props.optional ? React.createElement(\"span\", {\n    className: \"floatingField__optional\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"(optional)\") : null, showError == true ? React.createElement(\"span\", {\n    className: \"floatingField__desc\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \" \", errorMessage, \" \") : null), React.createElement(\"div\", {\n    className: \"floatingField_container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"floatingField__icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \" \", props.beforeIcon, \" \"), React.createElement(\"input\", {\n    type: \"text\",\n    className: \"floatingField__input\",\n    placeholder: props.placeholder,\n    onChange: props.onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), props.maxlength !== null ? React.createElement(\"span\", {\n    className: inputLength >= props.maxLength ? 'floatingField__length floatingField__length--error' : 'floatingField__length floatingField__length--ok',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, props.maxLength - inputLength) : null), React.createElement(\"span\", {\n    className: \"floatingField__underField\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \" \", props.underField, \" \"));\n};","map":{"version":3,"sources":["/Users/alexandreattar/Desktop/slack/src/components/shared/FloatingLabelTextField.js"],"names":["React","useState","FloatingLabelTextField","props","inputLength","setInputLength","showError","setShowError","errorMessage","setErrorMessage","remainingChar","event","strLength","target","value","length","shouldDisplayErrorMessage","maxLength","error","errorToDisplay","maxlength","errorNameTooLong","errorEmptyField","header","optional","beforeIcon","placeholder","onChange","underField"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport './../Main.css';\n\nexport const FloatingLabelTextField = (props) => {\n    const [inputLength, setInputLength] = useState(0);\n    const [showError, setShowError] = useState(false);\n    const [errorMessage, setErrorMessage] = useState('');\n\n    const remainingChar = (event) => {\n        const strLength = event.target.value.length;\n        setInputLength(strLength);\n        shouldDisplayErrorMessage(event);\n    }; \n\n    const shouldDisplayErrorMessage = (event) => {\n        if ((event.target.value.length < 1) || (event.target.value.length > props.maxLength)) {\n            const error = errorToDisplay();\n            setErrorMessage(error);\n            return setShowError(true);\n        }\n        return setShowError(false);\n    }\n\n    const errorToDisplay = () => {\n        return inputLength > props.maxlength ? props.errorNameTooLong : props.errorEmptyField;\n    }\n\n    return(\n        <div className='container__floatingField' onChange={remainingChar}>\n            <div className='floatingField_container--header'>\n                <span className='floatingField__header'>{props.header}</span>\n                { props.optional ? <span className='floatingField__optional'>(optional)</span> : null} \n                { showError == true ? <span className='floatingField__desc'> {errorMessage} </span> : null}\n            </div>\n            <div className='floatingField_container'>\n                <span className='floatingField__icon'> {props.beforeIcon} </span>\n                <input \n                type='text'\n                className='floatingField__input'\n                placeholder={props.placeholder}\n                onChange={props.onChange}\n                > \n                </input>\n                { props.maxlength !==null ? <span \n                className={inputLength >= props.maxLength ? 'floatingField__length floatingField__length--error' : 'floatingField__length floatingField__length--ok'}> \n                    {props.maxLength - inputLength}\n                </span> : null }\n            </div>\n            <span className='floatingField__underField'> { props.underField } </span>\n        </div>\n    );\n};"]},"metadata":{},"sourceType":"module"}