{"ast":null,"code":"import _slicedToArray from \"/Users/alexandreattar/Desktop/slack/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/alexandreattar/Desktop/slack/src/components/LeftSection/ChannelSection.js\";\nimport React, { useState } from 'react';\nimport './../../App.css';\nimport { PlusSign } from './../shared/Icon.js';\nimport { FloatingLabelTextField } from './../shared/FloatingLabelTextField';\nexport const ChannelSection = () => {\n  const _useState = useState(['General', 'General test', 'General test', 'General test', 'General test', 'General test', 'General test', 'General test', 'General test', 'General test', 'General test', 'General test', 'General test']),\n        _useState2 = _slicedToArray(_useState, 2),\n        channels = _useState2[0],\n        setChannels = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        name = _useState4[0],\n        setName = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        showOverlay = _useState6[0],\n        setShowOverlay = _useState6[1];\n\n  const _useState7 = useState(false),\n        _useState8 = _slicedToArray(_useState7, 2),\n        privateChannel = _useState8[0],\n        setPrivateChannel = _useState8[1];\n\n  const click = () => {\n    setShowOverlay(true);\n  };\n\n  const close = () => {\n    setShowOverlay(false);\n  };\n\n  const onChannelNameChange = event => {\n    setName(event.target.value);\n  };\n\n  const onSubmit = () => {\n    const channelsTemp = channels;\n    channelsTemp.push(name);\n    setChannels(channelsTemp);\n    close(); //close pop-up after adding channel\n  };\n\n  return React.createElement(\"div\", {\n    className: \"main__layout--channels\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(CreateChannelButton, {\n    channelsCount: channels.length,\n    createChannelClick: click,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), React.createElement(Channels, {\n    channels: channels,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), showOverlay ? React.createElement(PopUpAddChannel, {\n    closeOverlay: close,\n    onChange: onChannelNameChange,\n    onSubmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }) : null);\n};\n\nconst CreateChannelButton = props => {\n  return React.createElement(\"div\", {\n    className: \"longButton__header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"label__header label__header--title \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \" Channels (\", props.channelsCount, \")\"), React.createElement(\"span\", {\n    className: \"label__header\",\n    onClick: props.createChannelClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(PlusSign, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  })));\n};\n\nconst Channel = props => {\n  return React.createElement(\"div\", {\n    className: \"section__channel containner_channel\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, props.name, \" Channel\");\n};\n\nconst Channels = props => {\n  const channelsAr = props.channels;\n  return React.createElement(\"div\", {\n    className: \"section__channels\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, channelsAr.map(aChannel => React.createElement(Channel, {\n    name: aChannel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  })));\n};\n\nconst PopUpAddChannel = props => {\n  return React.createElement(\"div\", {\n    className: \"section__overlay\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"popUp\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"popUp__header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"Create a channel\"), React.createElement(FloatingLabelTextField, {\n    header: 'Name',\n    beforeIcon: '#',\n    placehoder: 'e.g. plan-budget',\n    onChange: props.onNameChange,\n    maxLength: 80,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }), React.createElement(FloatingLabelTextField, {\n    header: 'Description',\n    optional: true,\n    onChange: props.onDescChange,\n    beforeIcon: '#',\n    maxLength: 80,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"cancel__button\",\n    onClick: props.onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \" Create \"))));\n};","map":{"version":3,"sources":["/Users/alexandreattar/Desktop/slack/src/components/LeftSection/ChannelSection.js"],"names":["React","useState","PlusSign","FloatingLabelTextField","ChannelSection","channels","setChannels","name","setName","showOverlay","setShowOverlay","privateChannel","setPrivateChannel","click","close","onChannelNameChange","event","target","value","onSubmit","channelsTemp","push","length","CreateChannelButton","props","channelsCount","createChannelClick","Channel","Channels","channelsAr","map","aChannel","PopUpAddChannel","onNameChange","onDescChange"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport './../../App.css';\nimport { PlusSign }  from './../shared/Icon.js';\nimport { FloatingLabelTextField } from './../shared/FloatingLabelTextField';\n\nexport const ChannelSection = () => {\n\n    const [channels, setChannels] = useState(['General', 'General test', 'General test', 'General test', 'General test', 'General test', 'General test', 'General test', 'General test', 'General test', 'General test', 'General test', 'General test']);\n    const [name, setName] = useState('');\n    const [showOverlay, setShowOverlay] = useState(false);\n    const [privateChannel, setPrivateChannel] = useState(false);\n\n    const click = () => {\n        setShowOverlay(true);\n    };\n\n    const close = () => {\n        setShowOverlay(false);\n    };\n\n    const onChannelNameChange= (event) => {\n        setName(event.target.value);\n    };\n\n    const onSubmit = () => {\n        const channelsTemp = channels\n        channelsTemp.push(name)\n        setChannels(channelsTemp);\n        close(); //close pop-up after adding channel\n    };\n\n    return(\n        <div className=\"main__layout--channels\">\n            <CreateChannelButton channelsCount={channels.length} createChannelClick={click}/>\n            <Channels channels={channels}/>\n           { showOverlay ? <PopUpAddChannel closeOverlay={close} onChange={onChannelNameChange} onSubmit={onSubmit}/> : null }\n        </div>\n    );\n};\n\nconst CreateChannelButton = (props) => {\n    return (\n        <div className=\"longButton__header\">\n            <span className=\"label__header label__header--title \" > Channels ({props.channelsCount})</span> \n            <span className=\"label__header\" onClick={props.createChannelClick}><PlusSign /></span>\n        </div>\n    );\n};\n\nconst Channel = (props) => {\n    return (\n        <div className=\"section__channel containner_channel\">\n            {props.name} Channel\n        </div>\n    );\n}\n\n\nconst Channels = (props) => {\nconst channelsAr = props.channels;\n    return (\n        <div className=\"section__channels\">\n            { channelsAr.map((aChannel) => \n                <Channel name={aChannel} />\n            )}\n        </div>\n    );\n}\n\nconst PopUpAddChannel = (props) => {\n    return(\n        <div className=\"section__overlay\" >\n            <div className=\"popUp\">\n                <span className=\"popUp__header\">Create a channel</span>\n                <FloatingLabelTextField header={'Name'} beforeIcon={'#'} placehoder={'e.g. plan-budget'} onChange={props.onNameChange} maxLength={80}/>\n                <FloatingLabelTextField header={'Description'} optional={true} onChange={props.onDescChange} beforeIcon={'#'} maxLength={80}/>\n                <div>\n                    <span className=\"cancel__button\" onClick={props.onSubmit}> Create </span>\n                </div>\n            </div>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}