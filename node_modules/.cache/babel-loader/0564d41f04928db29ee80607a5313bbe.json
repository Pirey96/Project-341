{"ast":null,"code":"import _slicedToArray from \"/Users/alexandreattar/Desktop/slack/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/alexandreattar/Desktop/slack/src/components/LeftSection/ChannelSection.js\";\nimport React, { useState } from 'react';\nimport './../../App.css';\nimport { PlusSign } from './../shared/Icon.js';\nexport const ChannelSection = () => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        channels = _useState2[0],\n        setChannels = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        channelName = _useState4[0],\n        setChannelNAme = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        showOverlay = _useState6[0],\n        setShowOverlay = _useState6[1];\n\n  const click = () => {\n    console.log('open');\n    setShowOverlay(true);\n  };\n\n  const close = () => {\n    setShowOverlay(false);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"main__layout--channels\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(CreateChannelButton, {\n    channelsCount: channels.length,\n    createChannelClick: click,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }), React.createElement(Channels, {\n    channels: channels,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), showOverlay ? React.createElement(AddChannelOverlay, {\n    closeOverlay: close,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }) : null);\n};\n\nconst CreateChannelButton = props => {\n  return React.createElement(\"div\", {\n    className: \"longButton__header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"label__header label__header--title \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \" Channels (\", props.channelsCount, \")\"), React.createElement(\"span\", {\n    className: \"label__header\",\n    onClick: props.createChannelClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(PlusSign, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  })));\n};\n\nconst Channel = props => {\n  return React.createElement(\"div\", {\n    className: \"section__channel\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, props.name, \" test\");\n};\n\nconst Channels = props => {\n  return React.createElement(\"div\", {\n    className: \"section__channels\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, props.channels.map(channel => React.createElement(Channel, {\n    name: channel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  })));\n};\n\nconst AddChannelOverlay = props => {\n  return React.createElement(\"div\", {\n    className: \"section__overlay\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: props.closeOverlay,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \" \"));\n};","map":{"version":3,"sources":["/Users/alexandreattar/Desktop/slack/src/components/LeftSection/ChannelSection.js"],"names":["React","useState","PlusSign","ChannelSection","channels","setChannels","channelName","setChannelNAme","showOverlay","setShowOverlay","click","console","log","close","length","CreateChannelButton","props","channelsCount","createChannelClick","Channel","name","Channels","map","channel","AddChannelOverlay","closeOverlay"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,iBAAP;AACA,SAASC,QAAT,QAA0B,qBAA1B;AAEA,OAAO,MAAMC,cAAc,GAAG,MAAM;AAAA,oBAEAF,QAAQ,CAAC,EAAD,CAFR;AAAA;AAAA,QAEzBG,QAFyB;AAAA,QAEfC,WAFe;;AAAA,qBAGMJ,QAAQ,CAAC,EAAD,CAHd;AAAA;AAAA,QAGzBK,WAHyB;AAAA,QAGZC,cAHY;;AAAA,qBAIMN,QAAQ,CAAC,KAAD,CAJd;AAAA;AAAA,QAIzBO,WAJyB;AAAA,QAIZC,cAJY;;AAMhC,QAAMC,KAAK,GAAG,MAAM;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAH,IAAAA,cAAc,CAAC,IAAD,CAAd;AACH,GAHD;;AAKA,QAAMI,KAAK,GAAG,MAAM;AAChBJ,IAAAA,cAAc,CAAC,KAAD,CAAd;AACH,GAFD;;AAIA,SACI;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,mBAAD;AAAqB,IAAA,aAAa,EAAEL,QAAQ,CAACU,MAA7C;AAAqD,IAAA,kBAAkB,EAAEJ,KAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,QAAD;AAAU,IAAA,QAAQ,EAAEN,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGKI,WAAW,GAAG,oBAAC,iBAAD;AAAmB,IAAA,YAAY,EAAEK,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAA+C,IAH/D,CADJ;AAOH,CAtBM;;AAwBP,MAAME,mBAAmB,GAAIC,KAAD,IAAW;AACnC,SACI;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAM,IAAA,SAAS,EAAC,qCAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAmEA,KAAK,CAACC,aAAzE,MADJ,EAEI;AAAM,IAAA,SAAS,EAAC,eAAhB;AAAgC,IAAA,OAAO,EAAED,KAAK,CAACE,kBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAnE,CAFJ,CADJ;AAMH,CAPD;;AASA,MAAMC,OAAO,GAAIH,KAAD,IAAW;AACvB,SACI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,KAAK,CAACI,IADX,UADJ;AAKH,CAND;;AASA,MAAMC,QAAQ,GAAIL,KAAD,IAAW;AAExB,SACI;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,KAAK,CAACZ,QAAN,CAAekB,GAAf,CAAoBC,OAAD,IAChB,oBAAC,OAAD;AAAS,IAAA,IAAI,EAAEA,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,CADL,CADJ;AAOH,CATD;;AAWA,MAAMC,iBAAiB,GAAIR,KAAD,IAAW;AACjC,SACI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,OAAO,EAAEA,KAAK,CAACS,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADJ,CADJ;AAKH,CAND","sourcesContent":["import React, {useState} from 'react';\nimport './../../App.css';\nimport { PlusSign }  from './../shared/Icon.js';\n\nexport const ChannelSection = () => {\n\n    const [channels, setChannels] = useState([]);\n    const [channelName, setChannelNAme] = useState('');\n    const [showOverlay, setShowOverlay] = useState(false);\n\n    const click = () => {\n        console.log('open');\n        setShowOverlay(true);\n    };\n\n    const close = () => {\n        setShowOverlay(false);\n    };\n\n    return(\n        <div className=\"main__layout--channels\">\n            <CreateChannelButton channelsCount={channels.length} createChannelClick={click}/>\n            <Channels channels={channels}/>\n           { showOverlay ? <AddChannelOverlay closeOverlay={close} />: null }\n        </div>\n    );\n};\n\nconst CreateChannelButton = (props) => {\n    return (\n        <div className=\"longButton__header\">\n            <span className=\"label__header label__header--title \" > Channels ({props.channelsCount})</span> \n            <span className=\"label__header\" onClick={props.createChannelClick}><PlusSign /></span>\n        </div>\n    );\n};\n\nconst Channel = (props) => {\n    return (\n        <div className=\"section__channel\">\n            {props.name} test\n        </div>\n    );\n}\n\n\nconst Channels = (props) => {\n\n    return (\n        <div className=\"section__channels\">\n            {props.channels.map((channel)=> \n                <Channel name={channel} />\n            )}\n        </div>\n    );\n}\n\nconst AddChannelOverlay = (props) => {\n    return(\n        <div className=\"section__overlay\" >\n            <button onClick={props.closeOverlay}> </button>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}