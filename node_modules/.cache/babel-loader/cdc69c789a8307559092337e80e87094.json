{"ast":null,"code":"import _slicedToArray from \"/Users/alexandreattar/Desktop/slack/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/alexandreattar/Desktop/slack/src/components/RightSection/InputField/InputField.js\";\nimport React, { useState } from 'react';\nimport { PaperclipIcon } from './../../shared/Icon';\nimport './../../Main.css';\nimport './../../../App.css';\nimport firebase from 'firebase';\nexport const InputField = props => {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        message = _useState2[0],\n        setMessage = _useState2[1];\n\n  const onChange = event => {\n    setMessage(event.target.value);\n    firebase.firestore().collection(\"messages\").onSnapshot(doc => {\n      var source = doc.metadata.hasPendingWrites ? \"Local\" : \"Server\";\n      console.log(source, \" data: \", doc.data());\n    });\n  };\n\n  const sendMessage = event => {\n    event.preventDefault();\n\n    if (message !== '') {\n      const newMessage = {\n        message: message,\n        user: props.user,\n        timestamp: new Date()\n      };\n      firebase.firestore().collection('messages').add(newMessage);\n    }\n\n    setMessage('');\n  };\n\n  return React.createElement(\"form\", {\n    className: \"input-field-container\",\n    onSubmit: sendMessage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"input-field-container--icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(PaperclipIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  })), React.createElement(\"input\", {\n    className: \"input-field-container--inputField\",\n    value: message,\n    onChange: onChange,\n    placeholder: 'Message ',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }));\n};","map":{"version":3,"sources":["/Users/alexandreattar/Desktop/slack/src/components/RightSection/InputField/InputField.js"],"names":["React","useState","PaperclipIcon","firebase","InputField","props","message","setMessage","onChange","event","target","value","firestore","collection","onSnapshot","doc","source","metadata","hasPendingWrites","console","log","data","sendMessage","preventDefault","newMessage","user","timestamp","Date","add"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,aAAT,QAA8B,qBAA9B;AACA,OAAO,kBAAP;AACA,OAAO,oBAAP;AACA,OAAOC,QAAP,MAAqB,UAArB;AAEA,OAAO,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAAA,oBACHJ,QAAQ,CAAC,EAAD,CADL;AAAA;AAAA,QAC1BK,OAD0B;AAAA,QACjBC,UADiB;;AAGjC,QAAMC,QAAQ,GAAIC,KAAD,IAAW;AACxBF,IAAAA,UAAU,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAV;AACAR,IAAAA,QAAQ,CAACS,SAAT,GAAqBC,UAArB,CAAgC,UAAhC,EAA4CC,UAA5C,CAAwDC,GAAD,IAAS;AAC5D,UAAIC,MAAM,GAAGD,GAAG,CAACE,QAAJ,CAAaC,gBAAb,GAAgC,OAAhC,GAA0C,QAAvD;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAZ,EAAoB,SAApB,EAA+BD,GAAG,CAACM,IAAJ,EAA/B;AACH,KAHD;AAIH,GAND;;AAQA,QAAMC,WAAW,GAAIb,KAAD,IAAW;AAC3BA,IAAAA,KAAK,CAACc,cAAN;;AACA,QAAIjB,OAAO,KAAK,EAAhB,EAAoB;AAChB,YAAMkB,UAAU,GAAG;AACflB,QAAAA,OAAO,EAAEA,OADM;AAEfmB,QAAAA,IAAI,EAAEpB,KAAK,CAACoB,IAFG;AAGfC,QAAAA,SAAS,EAAE,IAAIC,IAAJ;AAHI,OAAnB;AAKAxB,MAAAA,QAAQ,CAACS,SAAT,GAAqBC,UAArB,CAAgC,UAAhC,EAA4Ce,GAA5C,CAAgDJ,UAAhD;AACH;;AACDjB,IAAAA,UAAU,CAAC,EAAD,CAAV;AACH,GAXD;;AAaA,SACI;AAAM,IAAA,SAAS,EAAC,uBAAhB;AAAwC,IAAA,QAAQ,EAAEe,WAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAM,IAAA,SAAS,EAAC,6BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8C,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA9C,CADJ,EAEI;AAAO,IAAA,SAAS,EAAC,mCAAjB;AAAqD,IAAA,KAAK,EAAEhB,OAA5D;AAAqE,IAAA,QAAQ,EAAEE,QAA/E;AAAyF,IAAA,WAAW,EAAE,UAAtG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ;AAMH,CA9BM","sourcesContent":["import React, { useState } from 'react';\nimport { PaperclipIcon } from './../../shared/Icon'\nimport './../../Main.css';\nimport './../../../App.css';\nimport firebase from 'firebase';\n\nexport const InputField = (props) => {\n    const [message, setMessage] = useState('');\n\n    const onChange = (event) => {\n        setMessage(event.target.value);\n        firebase.firestore().collection(\"messages\").onSnapshot((doc) => {\n            var source = doc.metadata.hasPendingWrites ? \"Local\" : \"Server\";\n            console.log(source, \" data: \", doc.data());\n        });\n    }\n\n    const sendMessage = (event) => {\t\n        event.preventDefault();\t\t\n        if (message !== '') {\n            const newMessage = {\n                message: message,\n                user: props.user,\n                timestamp: new Date()\n            }\n            firebase.firestore().collection('messages').add(newMessage);\n        }\n        setMessage('');\n    }\n\n    return(\n        <form className=\"input-field-container\" onSubmit={sendMessage}>\n            <span className=\"input-field-container--icon\"><PaperclipIcon /></span>\n            <input className=\"input-field-container--inputField\" value={message} onChange={onChange} placeholder={'Message '} />\n        </form>\n    );\n};"]},"metadata":{},"sourceType":"module"}