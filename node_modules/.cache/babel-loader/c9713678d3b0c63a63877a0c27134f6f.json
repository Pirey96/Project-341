{"ast":null,"code":"var _jsxFileName = \"/Users/alexandreattar/Desktop/slack/src/components/RightSection/Board/MessageBoard.js\";\nimport React, { useState } from 'react';\nimport './../../../App.css';\nimport './../../Main.css';\nimport moment from 'moment';\nexport const MessageBoard = () => {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(MessageSection, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }));\n};\n\nconst MessageSection = props => {\n  const date = new Date();\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(UserIcon, {\n    username: \"Alex\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }), React.createElement(ChatUserName, {\n    username: \"Alex\",\n    time: \"\".concat(date),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }));\n};\n\nconst UserIcon = props => {\n  const getFirstUserInitial = props.username.charAt(0);\n  return React.createElement(\"div\", {\n    className: \"user-message-avatar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"user-message-initial\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, getFirstUserInitial));\n};\n\nconst ChatUserName = props => {\n  return React.createElement(\"span\", {\n    className: \"user-message-username\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, props.username, \" \", React.createElement(\"span\", {\n    className: \"user-message-timestamp\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, moment(props.time)));\n};\n\nconst UserMessages = () => {};\n\nconst FirstMessage = props => {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  });\n};\n\nconst TimeSeperator = props => {\n  let shouldDisplay = false;\n\n  const timeBetweenMessages = props => {\n    const timeBetweenLastMessage = moment.duration(props.messageTime.diff(props.lastMessage, 'days'));\n\n    if (timeBetweenLastMessage > 1) {\n      shouldDisplay = true;\n    }\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, shouldDisplay ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"-- HERE WE WILL HAVE DATE SEPERATOR --\") : null);\n};","map":{"version":3,"sources":["/Users/alexandreattar/Desktop/slack/src/components/RightSection/Board/MessageBoard.js"],"names":["React","useState","moment","MessageBoard","MessageSection","props","date","Date","UserIcon","getFirstUserInitial","username","charAt","ChatUserName","time","UserMessages","FirstMessage","TimeSeperator","shouldDisplay","timeBetweenMessages","timeBetweenLastMessage","duration","messageTime","diff","lastMessage"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,oBAAP;AACA,OAAO,kBAAP;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,OAAO,MAAMC,YAAY,GAAG,MAAM;AAC9B,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAKH,CANM;;AASP,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAC9B,QAAMC,IAAI,GAAG,IAAIC,IAAJ,EAAb;AACA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,QAAD;AAAU,IAAA,QAAQ,EAAE,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,YAAD;AAAc,IAAA,QAAQ,EAAE,MAAxB;AAAgC,IAAA,IAAI,YAAKD,IAAL,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ;AAMH,CARD;;AAUA,MAAOE,QAAQ,GAAIH,KAAD,IAAW;AACzB,QAAMI,mBAAmB,GAAGJ,KAAK,CAACK,QAAN,CAAeC,MAAf,CAAsB,CAAtB,CAA5B;AACA,SACI;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAM,IAAA,SAAS,EAAC,sBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwCF,mBAAxC,CADJ,CADJ;AAKH,CAPD;;AASA,MAAMG,YAAY,GAAIP,KAAD,IAAW;AAC5B,SAAO;AAAM,IAAA,SAAS,EAAC,uBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyCA,KAAK,CAACK,QAA/C,OAAyD;AAAM,IAAA,SAAS,EAAC,wBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0CR,MAAM,CAACG,KAAK,CAACQ,IAAP,CAAhD,CAAzD,CAAP;AACH,CAFD;;AAIA,MAAMC,YAAY,GAAG,MAAM,CAE1B,CAFD;;AAKA,MAAMC,YAAY,GAAIV,KAAD,IAAW;AAC5B,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAKH,CAND;;AAQA,MAAMW,aAAa,GAAIX,KAAD,IAAW;AAE7B,MAAIY,aAAa,GAAG,KAApB;;AAEA,QAAMC,mBAAmB,GAAIb,KAAD,IAAW;AAEnC,UAAMc,sBAAsB,GAAGjB,MAAM,CAACkB,QAAP,CAAgBf,KAAK,CAACgB,WAAN,CAAkBC,IAAlB,CAAuBjB,KAAK,CAACkB,WAA7B,EAA0C,MAA1C,CAAhB,CAA/B;;AAEA,QAAIJ,sBAAsB,GAAG,CAA7B,EAAgC;AAC5BF,MAAAA,aAAa,GAAG,IAAhB;AACH;AACJ,GAPD;;AASA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,aAAa,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAAH,GAAuD,IADzE,CADJ;AAMH,CAnBD","sourcesContent":["import React, {useState} from 'react';\nimport './../../../App.css';\nimport './../../Main.css';\nimport moment from 'moment';\n\nexport const MessageBoard = () => {\n    return(\n        <div>\n            <MessageSection />\n        </div>\n    );\n};\n\n\nconst MessageSection = (props) => {\n    const date = new Date()\n    return(\n        <div>\n            <UserIcon username={\"Alex\"}/>\n            <ChatUserName username={\"Alex\"} time={`${date}`}/>\n        </div>\n    );\n};\n\nconst  UserIcon = (props) => {\n    const getFirstUserInitial = props.username.charAt(0);\n    return (\n        <div className=\"user-message-avatar\">\n            <span className=\"user-message-initial\">{getFirstUserInitial}</span>\n        </div>\n    );\n}\n\nconst ChatUserName = (props) => {\n    return <span className=\"user-message-username\">{props.username} <span className=\"user-message-timestamp\">{moment(props.time)}</span></span>;\n}\n\nconst UserMessages = () => {\n\n}\n\n\nconst FirstMessage = (props) => {\n    return(\n        <div>\n\n        </div>\n    );\n}\n\nconst TimeSeperator = (props) => {\n\n    let shouldDisplay = false;\n\n    const timeBetweenMessages = (props) => {\n\n        const timeBetweenLastMessage = moment.duration(props.messageTime.diff(props.lastMessage, 'days'));\n\n        if (timeBetweenLastMessage > 1) {\n            shouldDisplay = true\n        }\n    }\n\n    return(\n        <div>\n            {shouldDisplay ? <div>-- HERE WE WILL HAVE DATE SEPERATOR --</div> : null}\n            \n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}