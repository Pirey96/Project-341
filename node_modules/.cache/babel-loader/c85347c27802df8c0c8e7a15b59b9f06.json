{"ast":null,"code":"import _slicedToArray from \"/Users/alexandreattar/Desktop/slack/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/alexandreattar/Desktop/slack/src/components/shared/toggle.js\";\nimport React, { useState } from 'react';\nimport { Check } from './Icon';\nimport './../Main.css';\nexport const Toggle = props => {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        selected = _useState2[0],\n        setSelected = _useState2[1];\n\n  const test = () => {\n    const opposite = !selected;\n    setSelected(opposite);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"toggle__container\",\n    onClick: props.onToggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"toggle__childSwitch\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, props.selected ? null : ''));\n};","map":{"version":3,"sources":["/Users/alexandreattar/Desktop/slack/src/components/shared/toggle.js"],"names":["React","useState","Check","Toggle","props","selected","setSelected","test","opposite","onToggle"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,KAAT,QAAsB,QAAtB;AACA,OAAO,eAAP;AAEA,OAAO,MAAMC,MAAM,GAAIC,KAAD,IAAW;AAAA,oBAEGH,QAAQ,CAAC,KAAD,CAFX;AAAA;AAAA,QAEtBI,QAFsB;AAAA,QAEZC,WAFY;;AAI7B,QAAMC,IAAI,GAAG,MAAM;AACf,UAAMC,QAAQ,GAAG,CAACH,QAAlB;AACAC,IAAAA,WAAW,CAACE,QAAD,CAAX;AACH,GAHD;;AAKA,SACI;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAmC,IAAA,OAAO,EAAEJ,KAAK,CAACK,QAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKL,KAAK,CAACC,QAAN,GAAiB,IAAjB,GAAwB,EAD7B,CADJ,CADJ;AAOH,CAhBM","sourcesContent":["import React, {useState} from 'react';\nimport { Check } from './Icon';\nimport './../Main.css';\n\nexport const Toggle = (props) => {\n\n    const [selected, setSelected] = useState(false);\n\n    const test = () => {\n        const opposite = !selected;\n        setSelected(opposite)\n    }\n\n    return(\n        <div className='toggle__container' onClick={props.onToggle}>\n            <div className='toggle__childSwitch'>\n                {props.selected ? null : ''}\n            </div>\n        </div>\n    );\n};"]},"metadata":{},"sourceType":"module"}