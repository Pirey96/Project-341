{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\nimport 'firebase/storage';\nimport \"firebase/analytics\";\nimport \"firebase/firestore\";\nconst firebaseConfig = {\n  \"apiKey\": \"AIzaSyBkMtloCvcSKjYLuv8mcUyRVj0-0Hd3vFs\",\n  \"authDomain\": \"slackish-5461d.firebaseapp.com\",\n  \"databaseURL\": \"https://slackish-5461d.firebaseio.com\",\n  \"projectId\": \"slackish-5461d\",\n  \"storageBucket\": \"gs://slackish-5461d.appspot.com\",\n  \"messagingSenderId\": \"843184095995\",\n  \"appId\": \"1:843184095995:web:ac0b8bb063955798a0265e\",\n  \"measurementId\": \"G-X9KDBC637T\"\n}; // Initialize Firebase\n\nfirebase.initializeApp(firebaseConfig);\nconst db = firebase.firestore();\nconst rtdb = firebase.database();\n\nconst setupPresence = user => {\n  const isOfflineForRTDB = {\n    state: 'offline',\n    lastChanged: firebase.database.ServerValue.TIMESTAMP\n  };\n  const isOnlineForRTDB = {\n    state: 'online',\n    lastChanged: firebase.database.ServerValue.TIMESTAMP\n  };\n  const isOfflineForFirestore = {\n    state: 'offline',\n    lastChanged: firebase.firestore.FieldValue.serverTimestamp()\n  };\n  const isOnlineForFirestore = {\n    state: 'online',\n    lastChanged: firebase.firestore.FieldValue.serverTimestamp()\n  };\n  const rtdbRef = rtdb.ref(\"/status/\".concat(user.uid));\n  const userDoc = db.doc(\"/users/\".concat(user.uid));\n  rtdb.ref('.info/connected').on('value', async snapshot => {\n    if (snapshot.val() === false) {\n      userDoc.update({\n        status: isOfflineForFirestore\n      });\n      return;\n    }\n\n    await rtdbRef.onDisconnect().set(isOfflineForRTDB);\n    rtdbRef.set(isOnlineForRTDB);\n    userDoc.update({\n      status: isOnlineForFirestore\n    });\n  });\n};\n\nexport { db, firebase, setupPresence, rtdb };","map":{"version":3,"sources":["/Users/alexandreattar/Desktop/slack/src/firebase.js"],"names":["firebase","firebaseConfig","initializeApp","db","firestore","rtdb","database","setupPresence","user","isOfflineForRTDB","state","lastChanged","ServerValue","TIMESTAMP","isOnlineForRTDB","isOfflineForFirestore","FieldValue","serverTimestamp","isOnlineForFirestore","rtdbRef","ref","uid","userDoc","doc","on","snapshot","val","update","status","onDisconnect","set"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,eAAP;AACA,OAAO,mBAAP;AACA,OAAO,kBAAP;AACA,OAAO,oBAAP;AACA,OAAO,oBAAP;AAEA,MAAMC,cAAc,GAAG;AACnB,YAAU,yCADS;AAEnB,gBAAc,gCAFK;AAGnB,iBAAe,uCAHI;AAInB,eAAa,gBAJM;AAKnB,mBAAiB,iCALE;AAMnB,uBAAqB,cANF;AAOnB,WAAS,2CAPU;AAQnB,mBAAiB;AARE,CAAvB,C,CAUE;;AACAD,QAAQ,CAACE,aAAT,CAAuBD,cAAvB;AAEA,MAAME,EAAE,GAAGH,QAAQ,CAACI,SAAT,EAAX;AACA,MAAMC,IAAI,GAAGL,QAAQ,CAACM,QAAT,EAAb;;AAEA,MAAMC,aAAa,GAAIC,IAAD,IAAU;AAC9B,QAAMC,gBAAgB,GAAG;AACvBC,IAAAA,KAAK,EAAE,SADgB;AAEvBC,IAAAA,WAAW,EAAEX,QAAQ,CAACM,QAAT,CAAkBM,WAAlB,CAA8BC;AAFpB,GAAzB;AAIA,QAAMC,eAAe,GAAG;AACtBJ,IAAAA,KAAK,EAAE,QADe;AAEtBC,IAAAA,WAAW,EAAEX,QAAQ,CAACM,QAAT,CAAkBM,WAAlB,CAA8BC;AAFrB,GAAxB;AAIA,QAAME,qBAAqB,GAAG;AAC5BL,IAAAA,KAAK,EAAE,SADqB;AAE5BC,IAAAA,WAAW,EAAEX,QAAQ,CAACI,SAAT,CAAmBY,UAAnB,CAA8BC,eAA9B;AAFe,GAA9B;AAIA,QAAMC,oBAAoB,GAAG;AAC3BR,IAAAA,KAAK,EAAE,QADoB;AAE3BC,IAAAA,WAAW,EAAEX,QAAQ,CAACI,SAAT,CAAmBY,UAAnB,CAA8BC,eAA9B;AAFc,GAA7B;AAIA,QAAME,OAAO,GAAGd,IAAI,CAACe,GAAL,mBAAoBZ,IAAI,CAACa,GAAzB,EAAhB;AACA,QAAMC,OAAO,GAAGnB,EAAE,CAACoB,GAAH,kBAAiBf,IAAI,CAACa,GAAtB,EAAhB;AAEAhB,EAAAA,IAAI,CAACe,GAAL,CAAS,iBAAT,EAA4BI,EAA5B,CAA+B,OAA/B,EAAwC,MAAOC,QAAP,IAAoB;AAC1D,QAAIA,QAAQ,CAACC,GAAT,OAAmB,KAAvB,EAA8B;AAC5BJ,MAAAA,OAAO,CAACK,MAAR,CAAe;AACbC,QAAAA,MAAM,EAAEb;AADK,OAAf;AAGA;AACD;;AAED,UAAMI,OAAO,CAACU,YAAR,GAAuBC,GAAvB,CAA2BrB,gBAA3B,CAAN;AACAU,IAAAA,OAAO,CAACW,GAAR,CAAYhB,eAAZ;AACAQ,IAAAA,OAAO,CAACK,MAAR,CAAe;AACbC,MAAAA,MAAM,EAAEV;AADK,KAAf;AAGD,GAbD;AAcD,CAlCD;;AAoCA,SAASf,EAAT,EAAaH,QAAb,EAAuBO,aAAvB,EAAsCF,IAAtC","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\nimport 'firebase/storage';\nimport \"firebase/analytics\";\nimport \"firebase/firestore\";\n\nconst firebaseConfig = {\n    \"apiKey\": \"AIzaSyBkMtloCvcSKjYLuv8mcUyRVj0-0Hd3vFs\",\n    \"authDomain\": \"slackish-5461d.firebaseapp.com\",\n    \"databaseURL\": \"https://slackish-5461d.firebaseio.com\",\n    \"projectId\": \"slackish-5461d\",\n    \"storageBucket\": \"gs://slackish-5461d.appspot.com\",\n    \"messagingSenderId\": \"843184095995\",\n    \"appId\": \"1:843184095995:web:ac0b8bb063955798a0265e\",\n    \"measurementId\": \"G-X9KDBC637T\"\n  };\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n  \n  const db = firebase.firestore();\n  const rtdb = firebase.database();\n  \n  const setupPresence = (user) => {\n    const isOfflineForRTDB = {\n      state: 'offline',\n      lastChanged: firebase.database.ServerValue.TIMESTAMP,\n    };\n    const isOnlineForRTDB = {\n      state: 'online',\n      lastChanged: firebase.database.ServerValue.TIMESTAMP,\n    };\n    const isOfflineForFirestore = {\n      state: 'offline',\n      lastChanged: firebase.firestore.FieldValue.serverTimestamp(),\n    };\n    const isOnlineForFirestore = {\n      state: 'online',\n      lastChanged: firebase.firestore.FieldValue.serverTimestamp(),\n    };\n    const rtdbRef = rtdb.ref(`/status/${user.uid}`);\n    const userDoc = db.doc(`/users/${user.uid}`);\n  \n    rtdb.ref('.info/connected').on('value', async (snapshot) => {\n      if (snapshot.val() === false) {\n        userDoc.update({\n          status: isOfflineForFirestore,\n        });\n        return;\n      }\n  \n      await rtdbRef.onDisconnect().set(isOfflineForRTDB);\n      rtdbRef.set(isOnlineForRTDB);\n      userDoc.update({\n        status: isOnlineForFirestore,\n      });\n    });\n  };\n  \n  export { db, firebase, setupPresence, rtdb };"]},"metadata":{},"sourceType":"module"}