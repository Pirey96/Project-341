{"ast":null,"code":"import _slicedToArray from \"/Users/alexandreattar/Desktop/slack/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/alexandreattar/Desktop/slack/src/components/LeftSection/ChannelSection.js\";\nimport React, { useState } from 'react';\nimport './../../App.css';\nimport { PlusSign } from './../shared/Icon.js';\nexport const ChannelSection = () => {\n  const _useState = useState(['General', 'General test', 'General test', 'General test', 'General test']),\n        _useState2 = _slicedToArray(_useState, 2),\n        channels = _useState2[0],\n        setChannels = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        name = _useState4[0],\n        setName = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        channelName = _useState6[0],\n        setChannelNAme = _useState6[1];\n\n  const _useState7 = useState(false),\n        _useState8 = _slicedToArray(_useState7, 2),\n        showOverlay = _useState8[0],\n        setShowOverlay = _useState8[1];\n\n  const click = () => {\n    setShowOverlay(true);\n  };\n\n  const close = () => {\n    setShowOverlay(false);\n  };\n\n  const onChannelNameChange = event => {\n    setName(event.target.value);\n  };\n\n  const onSubmit = () => {\n    setChannels(channels.push(name));\n  };\n\n  return React.createElement(\"div\", {\n    className: \"main__layout--channels\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(CreateChannelButton, {\n    channelsCount: channels.length,\n    createChannelClick: click,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), React.createElement(Channels, {\n    channels: channels,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), showOverlay ? React.createElement(AddChannelOverlay, {\n    closeOverlay: close,\n    onChange: onChannelNameChange,\n    onSubmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }) : null);\n};\n\nconst CreateChannelButton = props => {\n  return React.createElement(\"div\", {\n    className: \"longButton__header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"label__header label__header--title \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \" Channels (\", props.channelsCount, \")\"), React.createElement(\"span\", {\n    className: \"label__header\",\n    onClick: props.createChannelClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(PlusSign, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  })));\n};\n\nconst Channel = props => {\n  return React.createElement(\"div\", {\n    className: \"section__channel\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, props.name, \" Channel\");\n};\n\nconst Channels = props => {\n  const channelsAr = props.channels;\n  return React.createElement(\"div\", {\n    className: \"section__channels\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, channelsAr.map(channel => React.createElement(Channel, {\n    name: channel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  })));\n};\n\nconst AddChannelOverlay = props => {\n  return React.createElement(\"div\", {\n    className: \"section__overlay\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"container__textField\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    className: \"login__field\",\n    placeholder: \"Channel Name\",\n    onChange: props.onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"text\",\n    className: \"login__field\",\n    placeholder: \"Subject (optional)\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"cancel__button\",\n    onClick: props.onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \" Submit \")), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"cancel__button\",\n    onClick: props.closeOverlay,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \" Cancel \"))));\n};","map":{"version":3,"sources":["/Users/alexandreattar/Desktop/slack/src/components/LeftSection/ChannelSection.js"],"names":["React","useState","PlusSign","ChannelSection","channels","setChannels","name","setName","channelName","setChannelNAme","showOverlay","setShowOverlay","click","close","onChannelNameChange","event","target","value","onSubmit","push","length","CreateChannelButton","props","channelsCount","createChannelClick","Channel","Channels","channelsAr","map","channel","AddChannelOverlay","onChange","closeOverlay"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport './../../App.css';\nimport { PlusSign }  from './../shared/Icon.js';\n\nexport const ChannelSection = () => {\n\n    const [channels, setChannels] = useState(['General', 'General test', 'General test', 'General test', 'General test']);\n    const [name, setName] = useState('');\n    const [channelName, setChannelNAme] = useState('');\n    const [showOverlay, setShowOverlay] = useState(false);\n\n    const click = () => {\n        setShowOverlay(true);\n    };\n\n    const close = () => {\n        setShowOverlay(false);\n    };\n\n    const onChannelNameChange= (event) => {\n        setName(event.target.value);\n    };\n\n    const onSubmit = () => {\n        setChannels(channels.push(name));\n    };\n\n    return(\n        <div className=\"main__layout--channels\">\n            <CreateChannelButton channelsCount={channels.length} createChannelClick={click}/>\n            <Channels channels={channels}/>\n           { showOverlay ? <AddChannelOverlay closeOverlay={close} onChange={onChannelNameChange} onSubmit={onSubmit}/> : null }\n        </div>\n    );\n};\n\nconst CreateChannelButton = (props) => {\n    return (\n        <div className=\"longButton__header\">\n            <span className=\"label__header label__header--title \" > Channels ({props.channelsCount})</span> \n            <span className=\"label__header\" onClick={props.createChannelClick}><PlusSign /></span>\n        </div>\n    );\n};\n\nconst Channel = (props) => {\n    return (\n        <div className=\"section__channel\">\n            {props.name} Channel\n        </div>\n    );\n}\n\n\nconst Channels = (props) => {\nconst channelsAr = props.channels;\n    return (\n        <div className=\"section__channels\">\n            { channelsAr.map((channel) => \n                <Channel name={channel} />\n            )}\n        </div>\n    );\n}\n\nconst AddChannelOverlay = (props) => {\n    return(\n        <div className=\"section__overlay\" >\n            <div className=\"container__textField\">\n                <input\n                type='text'\n                className='login__field'\n                placeholder='Channel Name'\n                onChange={props.onChange}>\n                </input>\n                <input \n                type='text'\n                className='login__field'\n                placeholder='Subject (optional)'>\n                </input>\n                <div>\n                    <span className=\"cancel__button\" onClick={props.onSubmit}> Submit </span>\n                </div>\n                <div>\n                    <span className=\"cancel__button\" onClick={props.closeOverlay}> Cancel </span>\n                </div>\n            </div>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}