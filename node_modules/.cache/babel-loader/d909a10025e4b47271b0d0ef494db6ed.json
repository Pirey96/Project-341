{"ast":null,"code":"import _slicedToArray from \"/Users/alexandreattar/Desktop/slack/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/alexandreattar/Desktop/slack/src/components/RightSection/Board/MessageBoard.js\";\nimport React, { useState } from 'react';\nimport './../../../App.css';\nimport './../../Main.css';\nimport moment from 'moment';\nimport { UserIcon, PenIcon } from './../../shared/Icon';\nexport const MessageBoard = () => {\n  const username = \"Alex\";\n  const date = new Date();\n  const messages = [{\n    'text': \"TEST TEXT 1\",\n    'time': date,\n    'username': 'Alex'\n  }, {\n    'text': \"TEST TEXT 2\",\n    'time': date,\n    'username': 'Alex2'\n  }];\n  return React.createElement(MessageSection, {\n    messages: messages,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  });\n};\n\nconst MessageSection = props => {\n  const messages = props.messages;\n\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        lastUser = _useState2[0],\n        setLastUser = _useState2[1]; //Time difference in hours\n\n\n  const _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        lastMessageTimeDif = _useState4[0],\n        setlastMessageTimeDif = _useState4[1];\n\n  const isDifferentUser = LastMessageUser => {\n    if (lastUser !== LastMessageUser) {\n      setLastUser(LastMessageUser);\n      return true;\n    }\n\n    return false;\n  };\n\n  const isLongDelay = lastMessageTime => {\n    const duration = moment.duration(lastMessageTime.diff(lastMessageTimeDif)).asHours(); //Decided for 2hours for particular reason\n\n    if (duration > 2) {\n      return true;\n    }\n  };\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, messages.map(message => {\n    {\n      isLongDelay(message.time) ? React.createElement(TimeSeperator, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }) : null;\n    }\n    React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, isDifferentUser(message.username) ? React.createElement(MessageHeader, {\n      date: date,\n      username: props.username,\n      message: firstMessages,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }) : React.createElement(UserMessages, {\n      messages: otherMessages,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }));\n  }));\n};\n\nconst UserAvatar = props => {\n  const getFirstUserInitial = props.username.charAt(0);\n  return React.createElement(\"div\", {\n    className: \"user-message-avatar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"user-message-initial\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, getFirstUserInitial));\n};\n\nconst ChatUserName = props => {\n  return React.createElement(\"span\", {\n    className: \"user-message-username\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, props.username, \" \", React.createElement(\"span\", {\n    className: \"user-message-timestamp\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, moment(props.time).format(\"LT\")));\n};\n\nconst MessageHeader = props => {\n  return React.createElement(\"div\", {\n    className: \"message-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(UserAvatar, {\n    username: \"Alex\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"message-header-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(ChatUserName, {\n    username: \"Alex\",\n    time: props.date,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }), props.messages.text));\n};\n\nconst UserMessages = props => {\n  const messages = props.messages;\n  return React.createElement(\"div\", {\n    className: \"user-message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, messages.map(message => React.createElement(\"li\", {\n    className: \"simple-message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(SimpleMessage, {\n    time: message.time,\n    message: message.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }))));\n};\n\nconst SimpleMessage = props => {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"simple-message__date\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, props.time), props.message);\n};\n\nconst FirstMessage = props => {\n  return React.createElement(\"div\", {\n    className: \"message-foreword\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"foreword-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, \"test1234\"), React.createElement(\"span\", {\n    className: \"foreword-description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, \"You created this channel on \", props.creationDate, \". This is the very beginning of the \", React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, props.channelName), \" channel.\"), React.createElement(\"span\", {\n    className: \"foreword-buttons-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, React.createElement(ForeWordButton, {\n    label: \"Set a description\",\n    icon: React.createElement(PenIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }), React.createElement(ForeWordButton, {\n    label: \"Add an app\",\n    isDisabled: true,\n    icon: '+',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }), React.createElement(ForeWordButton, {\n    label: \"Add people to this channel\",\n    icon: React.createElement(UserIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  })));\n};\n\nconst ForeWordButton = props => {\n  return React.createElement(\"div\", {\n    className: props.isDisabled ? \"foreword-buttons disabled\" : \"foreword-buttons enabled\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"foreword-icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, props.icon), props.label);\n};\n\nconst TimeSeperator = props => {\n  let shouldDisplay = false;\n\n  const timeBetweenMessages = props => {\n    const timeBetweenLastMessage = moment.duration(props.messageTime.diff(props.lastMessage, 'days'));\n\n    if (timeBetweenLastMessage > 1) {\n      shouldDisplay = true;\n    }\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, shouldDisplay ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, \"-- HERE WE WILL HAVE DATE SEPERATOR --\") : null);\n};","map":{"version":3,"sources":["/Users/alexandreattar/Desktop/slack/src/components/RightSection/Board/MessageBoard.js"],"names":["React","useState","moment","UserIcon","PenIcon","MessageBoard","username","date","Date","messages","MessageSection","props","lastUser","setLastUser","lastMessageTimeDif","setlastMessageTimeDif","isDifferentUser","LastMessageUser","isLongDelay","lastMessageTime","duration","diff","asHours","map","message","time","firstMessages","otherMessages","UserAvatar","getFirstUserInitial","charAt","ChatUserName","format","MessageHeader","text","UserMessages","SimpleMessage","FirstMessage","creationDate","channelName","ForeWordButton","isDisabled","icon","label","TimeSeperator","shouldDisplay","timeBetweenMessages","timeBetweenLastMessage","messageTime","lastMessage"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport './../../../App.css';\nimport './../../Main.css';\nimport moment from 'moment';\nimport { UserIcon, PenIcon } from './../../shared/Icon';\n\nexport const MessageBoard = () => {\n    const username = \"Alex\";\n    const date = new Date()\n    const messages = [\n        {\n            'text': \"TEST TEXT 1\",\n            'time': date,\n            'username': 'Alex'\n        },\n        {\n            'text': \"TEST TEXT 2\",\n            'time': date,\n            'username': 'Alex2'\n        },\n    ];\n\n    return(\n        <MessageSection messages={messages} />\n    );\n};\n\n\nconst MessageSection = (props) => {\n    const messages = props.messages;\n\n    const [lastUser, setLastUser] = useState('');\n    //Time difference in hours\n    const [lastMessageTimeDif, setlastMessageTimeDif] = useState(0);\n\n    const isDifferentUser = (LastMessageUser) => { \n        if(lastUser !== LastMessageUser) {\n            setLastUser(LastMessageUser);\n            return true;\n        }\n        return false;\n    }\n\n    const isLongDelay = (lastMessageTime) => {\n        const duration = moment.duration(lastMessageTime.diff(lastMessageTimeDif)).asHours();\n\n        //Decided for 2hours for particular reason\n        if(duration > 2){\n            return true\n        }\n    }\n    \n    return(\n        <React.Fragment>\n            {messages.map(message => {\n                {isLongDelay(message.time) ? <TimeSeperator/> : null}\n                <li>\n                    {isDifferentUser(message.username) ? \n                        <MessageHeader \n                        date={date} \n                        username={props.username} \n                        message={firstMessages}\n                        /> : \n                        <UserMessages messages={otherMessages}/>\n                    }\n                </li>\n            })}\n        </React.Fragment>\n    );\n};\n\nconst  UserAvatar = (props) => {\n    const getFirstUserInitial = props.username.charAt(0);\n    return (\n        <div className=\"user-message-avatar\">\n            <span className=\"user-message-initial\">{getFirstUserInitial}</span>\n        </div>\n    );\n}\n\nconst ChatUserName = (props) => {\n    return <span className=\"user-message-username\">{props.username} <span className=\"user-message-timestamp\">{moment(props.time).format(\"LT\")}</span></span>;\n}\n\nconst MessageHeader = (props) => {\n    return (\n        <div className=\"message-container\">\n            <UserAvatar username={\"Alex\"}/>\n            <div className=\"message-header-container\">\n                <ChatUserName username={\"Alex\"} time={props.date}/>\n                {props.messages.text}\n            </div>\n        </div>\n    );\n}\n\nconst UserMessages = (props) => {\n    const messages = props.messages;\n    return(\n        <div className=\"user-message\">\n                {messages.map(message => \n                    <li className=\"simple-message\">\n                        <SimpleMessage time={message.time} message={message.text}/>\n                    </li>\n                )}\n        </div>\n    );\n}\n\nconst SimpleMessage = (props) => {\n    return(\n        <div>\n            <span className=\"simple-message__date\">{props.time}</span>\n            {props.message}\n        </div>\n    );\n}\n\n\nconst FirstMessage = (props) => {\n    return(\n        <div className=\"message-foreword\">\n            <span className=\"foreword-title\">test1234</span>\n            <span className=\"foreword-description\">You created this channel on {props.creationDate}. This is the very beginning of the <b>{props.channelName}</b> channel.</span>\n            <span className=\"foreword-buttons-container\">\n                <ForeWordButton label={\"Set a description\"} icon={<PenIcon />}/> \n                <ForeWordButton label={\"Add an app\"} isDisabled={true} icon={'+'}/> \n                <ForeWordButton label={\"Add people to this channel\"} icon={<UserIcon />}/> \n            </span>\n        </div>\n    );\n}\n\nconst ForeWordButton = (props) => {\n    return(\n        <div className={props.isDisabled ? \"foreword-buttons disabled\" : \"foreword-buttons enabled\"}>\n            <span className=\"foreword-icon\">{props.icon}</span>{props.label} \n        </div>\n    )\n}\n\nconst TimeSeperator = (props) => {\n\n    let shouldDisplay = false;\n\n    const timeBetweenMessages = (props) => {\n\n        const timeBetweenLastMessage = moment.duration(props.messageTime.diff(props.lastMessage, 'days'));\n\n        if (timeBetweenLastMessage > 1) {\n            shouldDisplay = true\n        }\n    }\n\n    return(\n        <div>\n            {shouldDisplay ? <div>-- HERE WE WILL HAVE DATE SEPERATOR --</div> : null}\n            \n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}