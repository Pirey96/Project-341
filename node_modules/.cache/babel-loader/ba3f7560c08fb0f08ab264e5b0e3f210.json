{"ast":null,"code":"var _jsxFileName = \"/Users/alexandreattar/Desktop/slack/src/components/RightSection/Board/MessageBoard.js\";\nimport React, { useState } from 'react';\nimport './../../../App.css';\nimport './../../Main.css';\nimport moment from 'moment';\nimport { UserIcon, PenIcon } from './../../shared/Icon';\nexport const MessageBoard = () => {\n  const username = \"Alex\";\n  const messages = [\"OK\", \"OKo\", \"OKp\", \"ooooOK\", \"OkkkK\", \"OK\", \"OK\"];\n  return React.createElement(MessageSection, {\n    username: username,\n    messages: messages,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  });\n};\n\nconst MessageSection = props => {\n  const date = new Date();\n  const firstMessages = props.messages.slice(0, 1);\n  const otherMessages = props.messages.slice(1);\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(FirstMessage, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), React.createElement(MessageHeader, {\n    date: date,\n    username: props.username,\n    message: firstMessages,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }), React.createElement(UserMessages, {\n    messages: otherMessages,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }));\n};\n\nconst UserAvatar = props => {\n  const getFirstUserInitial = props.username.charAt(0);\n  return React.createElement(\"div\", {\n    className: \"user-message-avatar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"user-message-initial\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, getFirstUserInitial));\n};\n\nconst ChatUserName = props => {\n  return React.createElement(\"span\", {\n    className: \"user-message-username\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, props.username, \" \", React.createElement(\"span\", {\n    className: \"user-message-timestamp\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, moment(props.time).format(\"LT\")));\n};\n\nconst MessageHeader = props => {\n  const messages = props.messages;\n  return React.createElement(\"div\", {\n    className: \"message-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(UserAvatar, {\n    username: \"Alex\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"message-header-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(ChatUserName, {\n    username: \"Alex\",\n    time: props.date,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), React.createElement(UserMessages, {\n    messages: messages,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), \" hi\"));\n};\n\nconst UserMessages = props => {\n  const messages = props.messages;\n  return React.createElement(\"div\", {\n    className: \"user-message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, messages));\n};\n\nconst FirstMessage = props => {\n  return React.createElement(\"div\", {\n    className: \"message-foreword\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"foreword-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"test1234\"), React.createElement(\"span\", {\n    className: \"foreword-description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"You created this channel on \", props.creationDate, \". This is the very beginning of the \", React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, props.channelName), \" channel.\"), React.createElement(\"span\", {\n    className: \"foreword-buttons-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(ForeWordButton, {\n    label: \"Set a description\",\n    icon: React.createElement(PenIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }), React.createElement(ForeWordButton, {\n    label: \"Add an app\",\n    isDisabled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }), React.createElement(ForeWordButton, {\n    label: \"Add people to this channel\",\n    icon: React.createElement(UserIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  })));\n};\n\nconst ForeWordButton = props => {\n  return React.createElement(\"div\", {\n    className: props.isDisabled ? \"foreword-buttons disabled\" : \"foreword-buttons enabled\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"foreword-icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, props.icon), props.label);\n};\n\nconst TimeSeperator = props => {\n  let shouldDisplay = false;\n\n  const timeBetweenMessages = props => {\n    const timeBetweenLastMessage = moment.duration(props.messageTime.diff(props.lastMessage, 'days'));\n\n    if (timeBetweenLastMessage > 1) {\n      shouldDisplay = true;\n    }\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, shouldDisplay ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"-- HERE WE WILL HAVE DATE SEPERATOR --\") : null);\n};","map":{"version":3,"sources":["/Users/alexandreattar/Desktop/slack/src/components/RightSection/Board/MessageBoard.js"],"names":["React","useState","moment","UserIcon","PenIcon","MessageBoard","username","messages","MessageSection","props","date","Date","firstMessages","slice","otherMessages","UserAvatar","getFirstUserInitial","charAt","ChatUserName","time","format","MessageHeader","UserMessages","FirstMessage","creationDate","channelName","ForeWordButton","isDisabled","icon","label","TimeSeperator","shouldDisplay","timeBetweenMessages","timeBetweenLastMessage","duration","messageTime","diff","lastMessage"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport './../../../App.css';\nimport './../../Main.css';\nimport moment from 'moment';\nimport { UserIcon, PenIcon } from './../../shared/Icon';\n\nexport const MessageBoard = () => {\n    const username = \"Alex\";\n    const messages = [\"OK\", \"OKo\", \"OKp\", \"ooooOK\", \"OkkkK\", \"OK\", \"OK\",];\n\n    return(\n        <MessageSection username={username} messages={messages} />\n    );\n};\n\n\nconst MessageSection = (props) => {\n    const date = new Date()\n    const firstMessages = props.messages.slice(0,1);\n    const otherMessages = props.messages.slice(1);\n    \n    return(\n        <React.Fragment>\n            <FirstMessage/>\n            <MessageHeader date={date} username={props.username} message={firstMessages}/>\n            <UserMessages messages={otherMessages}/>\n        </React.Fragment>\n    );\n};\n\nconst  UserAvatar = (props) => {\n    const getFirstUserInitial = props.username.charAt(0);\n    return (\n        <div className=\"user-message-avatar\">\n            <span className=\"user-message-initial\">{getFirstUserInitial}</span>\n        </div>\n    );\n}\n\nconst ChatUserName = (props) => {\n    return <span className=\"user-message-username\">{props.username} <span className=\"user-message-timestamp\">{moment(props.time).format(\"LT\")}</span></span>;\n}\n\nconst MessageHeader = (props) => {\n    const messages = props.messages;\n\n    return (\n        <div className=\"message-container\">\n            <UserAvatar username={\"Alex\"}/>\n            <div className=\"message-header-container\">\n                <ChatUserName username={\"Alex\"} time={props.date}/>\n                <UserMessages messages={messages}/> hi\n            </div>\n        </div>\n    );\n}\n\nconst UserMessages = (props) => {\n    const messages = props.messages;\n    return(\n        <div className=\"user-message\">\n            <span>{messages}</span>\n        </div>\n    );\n}\n\n\nconst FirstMessage = (props) => {\n    return(\n        <div className=\"message-foreword\">\n            <span className=\"foreword-title\">test1234</span>\n            <span className=\"foreword-description\">You created this channel on {props.creationDate}. This is the very beginning of the <b>{props.channelName}</b> channel.</span>\n            <span className=\"foreword-buttons-container\">\n                <ForeWordButton label={\"Set a description\"} icon={<PenIcon />}/> \n                <ForeWordButton label={\"Add an app\"} isDisabled={true}/> \n                <ForeWordButton label={\"Add people to this channel\"} icon={<UserIcon />}/> \n            </span>\n        </div>\n    );\n}\n\nconst ForeWordButton = (props) => {\n    return(\n        <div className={props.isDisabled ? \"foreword-buttons disabled\" : \"foreword-buttons enabled\"}>\n            <span className=\"foreword-icon\">{props.icon}</span>{props.label} \n        </div>\n    )\n}\n\nconst TimeSeperator = (props) => {\n\n    let shouldDisplay = false;\n\n    const timeBetweenMessages = (props) => {\n\n        const timeBetweenLastMessage = moment.duration(props.messageTime.diff(props.lastMessage, 'days'));\n\n        if (timeBetweenLastMessage > 1) {\n            shouldDisplay = true\n        }\n    }\n\n    return(\n        <div>\n            {shouldDisplay ? <div>-- HERE WE WILL HAVE DATE SEPERATOR --</div> : null}\n            \n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}