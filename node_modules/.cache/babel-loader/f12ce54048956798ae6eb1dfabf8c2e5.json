{"ast":null,"code":"var _jsxFileName = \"/Users/alexandreattar/Desktop/slack/src/components/RightSection/Board/MessageBoard.js\";\nimport React, { useState } from 'react';\nimport './../../../App.css';\nimport './../../Main.css';\nimport moment from 'moment';\nexport const MessageBoard = () => {\n  const username = \"Alex\";\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(MessageSection, {\n    username: username,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }));\n};\n\nconst MessageSection = props => {\n  const date = new Date();\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(MessageHeader, {\n    date: date,\n    username: props.username,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }), React.createElement(UserMessages, {\n    messages: props.messages.slice(1),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }));\n};\n\nconst UserIcon = props => {\n  const getFirstUserInitial = props.username.charAt(0);\n  return React.createElement(\"div\", {\n    className: \"user-message-avatar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"user-message-initial\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, getFirstUserInitial));\n};\n\nconst ChatUserName = props => {\n  return React.createElement(\"span\", {\n    className: \"user-message-username\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, props.username, \" \", React.createElement(\"span\", {\n    className: \"user-message-timestamp\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, moment(props.time).format(\"LT\")));\n};\n\nconst MessageHeader = props => {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(UserIcon, {\n    username: \"Alex\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), React.createElement(ChatUserName, {\n    username: \"Alex\",\n    time: props.date,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), React.createElement(UserMessages, {\n    messages: props.messages.slice(0, 1),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }));\n};\n\nconst UserMessages = props => {\n  const messages = props.messages;\n  const isEmpty = props.messages.length <= 1;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, messages.map(message => {\n    React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \" \", message, \" \");\n  }));\n};\n\nconst FirstMessage = props => {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  });\n};\n\nconst TimeSeperator = props => {\n  let shouldDisplay = false;\n\n  const timeBetweenMessages = props => {\n    const timeBetweenLastMessage = moment.duration(props.messageTime.diff(props.lastMessage, 'days'));\n\n    if (timeBetweenLastMessage > 1) {\n      shouldDisplay = true;\n    }\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, shouldDisplay ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \"-- HERE WE WILL HAVE DATE SEPERATOR --\") : null);\n};","map":{"version":3,"sources":["/Users/alexandreattar/Desktop/slack/src/components/RightSection/Board/MessageBoard.js"],"names":["React","useState","moment","MessageBoard","username","MessageSection","props","date","Date","messages","slice","UserIcon","getFirstUserInitial","charAt","ChatUserName","time","format","MessageHeader","UserMessages","isEmpty","length","map","message","FirstMessage","TimeSeperator","shouldDisplay","timeBetweenMessages","timeBetweenLastMessage","duration","messageTime","diff","lastMessage"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport './../../../App.css';\nimport './../../Main.css';\nimport moment from 'moment';\n\nexport const MessageBoard = () => {\n    const username = \"Alex\";\n\n    return(\n        <div>\n            <MessageSection username={username}/>\n        </div>\n    );\n};\n\n\nconst MessageSection = (props) => {\n    const date = new Date()\n    return(\n        <div>\n            <MessageHeader date={date} username={props.username}/>\n            <UserMessages messages={props.messages.slice(1)}/>\n        </div>\n    );\n};\n\nconst  UserIcon = (props) => {\n    const getFirstUserInitial = props.username.charAt(0);\n    return (\n        <div className=\"user-message-avatar\">\n            <span className=\"user-message-initial\">{getFirstUserInitial}</span>\n        </div>\n    );\n}\n\nconst ChatUserName = (props) => {\n    return <span className=\"user-message-username\">{props.username} <span className=\"user-message-timestamp\">{moment(props.time).format(\"LT\")}</span></span>;\n}\n\nconst MessageHeader = (props) => {\n    return (\n        <div>\n            <UserIcon username={\"Alex\"}/>\n            <ChatUserName username={\"Alex\"} time={props.date}/>\n            <UserMessages messages={props.messages.slice(0, 1)}/>\n        </div>\n    );\n}\n\nconst UserMessages = (props) => {\n    const messages = props.messages;\n    const isEmpty = props.messages.length <= 1\n    return(\n        <div>\n            {messages.map(message => {\n                <span> {message} </span>\n            })}\n        </div>\n    );\n}\n\n\nconst FirstMessage = (props) => {\n    return(\n        <div>\n\n        </div>\n    );\n}\n\nconst TimeSeperator = (props) => {\n\n    let shouldDisplay = false;\n\n    const timeBetweenMessages = (props) => {\n\n        const timeBetweenLastMessage = moment.duration(props.messageTime.diff(props.lastMessage, 'days'));\n\n        if (timeBetweenLastMessage > 1) {\n            shouldDisplay = true\n        }\n    }\n\n    return(\n        <div>\n            {shouldDisplay ? <div>-- HERE WE WILL HAVE DATE SEPERATOR --</div> : null}\n            \n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}