{"ast":null,"code":"import _slicedToArray from \"/Users/alexandreattar/Desktop/slack/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/alexandreattar/Desktop/slack/src/components/shared/FloatingLabelTextField.js\";\nimport React, { useState } from 'react';\nexport const FloatingLabelTextField = props => {\n  const _useState = useState(props.maxLength),\n        _useState2 = _slicedToArray(_useState, 2),\n        availableChar = _useState2[0],\n        setAvailableChar = _useState2[1];\n\n  const remainingChar = event => {\n    const currentLength = event.target.length;\n    console.log(event.target.value);\n    const remaining = availableChar - currentLength;\n    setAvailableChar(remaining);\n  };\n\n  return React.createElement(\"div\", {\n    onChange: remainingChar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, props.header), \" \", props.headerDesc !== undefined ? React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \" \") : null, React.createElement(\"div\", {\n    className: \"floatingField_container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \" \", props.beforeIcon, \" \"), React.createElement(\"input\", {\n    placeholder: \"plan-project\",\n    onChange: props.onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }), props.maxlength !== null ? React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \" \", availableChar, \" \") : null));\n};","map":{"version":3,"sources":["/Users/alexandreattar/Desktop/slack/src/components/shared/FloatingLabelTextField.js"],"names":["React","useState","FloatingLabelTextField","props","maxLength","availableChar","setAvailableChar","remainingChar","event","currentLength","target","length","console","log","value","remaining","header","headerDesc","undefined","beforeIcon","onChange","maxlength"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AAEA,OAAO,MAAMC,sBAAsB,GAAIC,KAAD,IAAW;AAAA,oBAEHF,QAAQ,CAACE,KAAK,CAACC,SAAP,CAFL;AAAA;AAAA,QAEtCC,aAFsC;AAAA,QAEvBC,gBAFuB;;AAI7C,QAAMC,aAAa,GAAIC,KAAD,IAAW;AAC7B,UAAMC,aAAa,GAAGD,KAAK,CAACE,MAAN,CAAaC,MAAnC;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,KAAK,CAACE,MAAN,CAAaI,KAAzB;AACA,UAAMC,SAAS,GAAGV,aAAa,GAAGI,aAAlC;AACAH,IAAAA,gBAAgB,CAACS,SAAD,CAAhB;AACH,GALD;;AAOA,SACI;AAAK,IAAA,QAAQ,EAAER,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOJ,KAAK,CAACa,MAAb,CADJ,OACiCb,KAAK,CAACc,UAAN,KAAqBC,SAArB,GAAiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAjC,GAAkD,IADnF,EAEI;AAAK,IAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAQf,KAAK,CAACgB,UAAd,MADJ,EAEI;AACA,IAAA,WAAW,EAAC,cADZ;AAEA,IAAA,QAAQ,EAAEhB,KAAK,CAACiB,QAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAOKjB,KAAK,CAACkB,SAAN,KAAoB,IAApB,GAA2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAQhB,aAAR,MAA3B,GAA4D,IAPjE,CAFJ,CADJ;AAcH,CAzBM","sourcesContent":["import React, {useState} from 'react';\n\nexport const FloatingLabelTextField = (props) => {\n\n    const [availableChar, setAvailableChar] = useState(props.maxLength)\n\n    const remainingChar = (event) => {\n        const currentLength = event.target.length;\n        console.log(event.target.value);\n        const remaining = availableChar - currentLength;\n        setAvailableChar(remaining);\n    };\n\n    return(\n        <div onChange={remainingChar}>\n            <span>{props.header}</span> {props.headerDesc !== undefined ? <span> </span> : null}\n            <div className=\"floatingField_container\">\n                <span> {props.beforeIcon} </span>\n                <input \n                placeholder='plan-project'\n                onChange={props.onChange}\n                > \n                </input>\n                {props.maxlength !== null ? <span> {availableChar} </span> : null}\n            </div>\n        </div>\n    );\n};"]},"metadata":{},"sourceType":"module"}