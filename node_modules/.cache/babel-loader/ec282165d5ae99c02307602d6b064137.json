{"ast":null,"code":"var _jsxFileName = \"/Users/alexandreattar/Desktop/slack/src/components/RightSection/Board/MessageBoard.js\";\nimport React, { useState } from 'react';\nimport './../../../App.css';\nimport './../../Main.css';\nimport moment from 'moment';\nimport { UserIcon, PenIcon } from './../../shared/Icon';\nexport const MessageBoard = () => {\n  const currentUser = \"Alex\";\n  const date = new Date();\n  const messages = [{\n    id: 1,\n    text: \"TEST TEXT 1\",\n    time: date,\n    username: 'Alex'\n  }, {\n    id: 2,\n    text: \"TEST TEXT 2\",\n    time: date,\n    username: 'Alex2'\n  }];\n  return React.createElement(MessageSection, {\n    messages: messages,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  });\n};\n\nconst MessageSection = props => {\n  const messages = props.messages;\n  const firstMessage = props.messages[0];\n  let lastUser = '';\n  let lastTime = firstMessage.time;\n\n  const isDifferentUser = LastMessageUser => {\n    if (lastUser !== LastMessageUser) {\n      return true;\n    }\n\n    return false;\n  };\n\n  const isLongDelay = lastMessageTime => {\n    const now = moment(lastTime);\n    const end = moment(lastMessageTime);\n    const duration = moment.duration(now.diff(end)).asHours(); //Decided for 2hours for particular reason\n\n    if (duration > 2) {\n      return true;\n    }\n\n    return false;\n  };\n\n  const setNewValue = message => {\n    lastTime = message.time;\n    lastUser = message.username;\n  };\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(FirstMessage, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }), messages.map(message => React.createElement(\"li\", {\n    key: message.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, isLongDelay(message.time) ? React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"________++++++++__________ \") : null, isDifferentUser(message.username) ? React.createElement(MessageHeader, {\n    date: message.time,\n    username: message.username,\n    message: message.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }) : React.createElement(UserMessages, {\n    messages: message.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }), setNewValue(message))));\n};\n\nconst UserAvatar = props => {\n  console.log(props);\n  const getFirstUserInitial = props.username.charAt(0);\n  return React.createElement(\"div\", {\n    className: \"user-message-avatar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"user-message-initial\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, getFirstUserInitial));\n};\n\nconst ChatUserName = props => {\n  return React.createElement(\"div\", {\n    className: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"user-message-username\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, props.username, React.createElement(\"span\", {\n    className: \"user-message-timestamp\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, moment(props.time).format(\"LT\"))));\n};\n\nconst MessageHeader = props => {\n  return React.createElement(\"div\", {\n    className: \"message-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(UserAvatar, {\n    username: props.username,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"message-header-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(ChatUserName, {\n    username: props.username,\n    time: props.date,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }), props.message));\n};\n\nconst UserMessages = props => {\n  return React.createElement(\"div\", {\n    className: \"user-message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(SimpleMessage, {\n    time: props.time,\n    message: props.message,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }));\n};\n\nconst SimpleMessage = props => {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"simple-message__date\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, props.time), props.message);\n};\n\nconst FirstMessage = props => {\n  return React.createElement(\"div\", {\n    className: \"message-foreword\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"foreword-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, \"test1234\"), React.createElement(\"span\", {\n    className: \"foreword-description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, \"You created this channel on \", props.creationDate, \". This is the very beginning of the \", React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, props.channelName), \" channel.\"), React.createElement(\"span\", {\n    className: \"foreword-buttons-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, React.createElement(ForeWordButton, {\n    label: \"Set a description\",\n    icon: React.createElement(PenIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }), React.createElement(ForeWordButton, {\n    label: \"Add an app\",\n    isDisabled: true,\n    icon: '+',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }), React.createElement(ForeWordButton, {\n    label: \"Add people to this channel\",\n    icon: React.createElement(UserIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  })));\n};\n\nconst ForeWordButton = props => {\n  return React.createElement(\"div\", {\n    className: props.isDisabled ? \"foreword-buttons disabled\" : \"foreword-buttons enabled\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"foreword-icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, props.icon), props.label);\n};\n\nconst TimeSeperator = props => {\n  let shouldDisplay = false;\n\n  const timeBetweenMessages = props => {\n    const timeBetweenLastMessage = moment.duration(props.messageTime.diff(props.lastMessage, 'days'));\n\n    if (timeBetweenLastMessage > 1) {\n      shouldDisplay = true;\n    }\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, shouldDisplay ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }, \"-- HERE WE WILL HAVE DATE SEPERATOR --\") : null);\n};","map":{"version":3,"sources":["/Users/alexandreattar/Desktop/slack/src/components/RightSection/Board/MessageBoard.js"],"names":["React","useState","moment","UserIcon","PenIcon","MessageBoard","currentUser","date","Date","messages","id","text","time","username","MessageSection","props","firstMessage","lastUser","lastTime","isDifferentUser","LastMessageUser","isLongDelay","lastMessageTime","now","end","duration","diff","asHours","setNewValue","message","map","UserAvatar","console","log","getFirstUserInitial","charAt","ChatUserName","format","MessageHeader","UserMessages","SimpleMessage","FirstMessage","creationDate","channelName","ForeWordButton","isDisabled","icon","label","TimeSeperator","shouldDisplay","timeBetweenMessages","timeBetweenLastMessage","messageTime","lastMessage"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport './../../../App.css';\nimport './../../Main.css';\nimport moment from 'moment';\nimport { UserIcon, PenIcon } from './../../shared/Icon';\n\nexport const MessageBoard = () => {\n    const currentUser = \"Alex\";\n    const date = new Date()\n    const messages = [\n        {\n            id: 1,\n            text: \"TEST TEXT 1\",\n            time: date,\n            username: 'Alex'\n        },\n        {\n            id: 2,\n            text: \"TEST TEXT 2\",\n            time: date,\n            username: 'Alex2'\n        },\n    ];\n\n    return(\n        <MessageSection messages={messages} />\n    );\n};\n\n\nconst MessageSection = (props) => {\n    const messages = props.messages;\n    const firstMessage = props.messages[0]\n\n    let lastUser = '';\n    let lastTime = firstMessage.time;\n\n    const isDifferentUser = (LastMessageUser) => { \n        if(lastUser !== LastMessageUser) {\n            return true;\n        }\n        return false;\n    }\n\n    const isLongDelay = (lastMessageTime) => {\n        const now = moment(lastTime);\n        const end = moment(lastMessageTime);\n\n        const duration = moment.duration(now.diff(end)).asHours();\n\n        //Decided for 2hours for particular reason\n        if (duration > 2) {\n            return true;\n        }\n        return false;\n    }\n\n    const setNewValue = (message) => {\n        lastTime = message.time;\n        lastUser = message.username;\n    }\n    \n    return(\n        <React.Fragment>\n            <FirstMessage />\n            {messages.map(message => \n                <li key={message.id}>\n                    {isLongDelay(message.time) ? <span>________++++++++__________ </span> : null}\n                    {isDifferentUser(message.username) ? \n                        <MessageHeader \n                        date={message.time} \n                        username={message.username} \n                        message={message.text}\n                        /> : \n                        <UserMessages messages={message.text}/>\n                    }\n                    {setNewValue(message)}\n                </li>\n            )}\n        </React.Fragment>\n    );\n};\n\nconst  UserAvatar = (props) => {\n    console.log(props);\n    const getFirstUserInitial = props.username.charAt(0);\n    return (\n        <div className=\"user-message-avatar\">\n            <span className=\"user-message-initial\">{getFirstUserInitial}</span>\n        </div>\n    );\n}\n\nconst ChatUserName = (props) => {\n    return(\n        <div className=\"\">\n            <span className=\"user-message-username\">\n                {props.username} \n                <span className=\"user-message-timestamp\">\n                {moment(props.time).format(\"LT\")}\n                </span>\n            </span>\n        </div>\n    );\n}\n\nconst MessageHeader = (props) => {\n    return (\n        <div className=\"message-container\">\n            <UserAvatar username={props.username}/>\n            <div className=\"message-header-container\">\n                <ChatUserName username={props.username} time={props.date}/>\n                {props.message}\n            </div>\n        </div>\n    );\n}\n\nconst UserMessages = (props) => {\n    return(\n        <div className=\"user-message\">\n            <SimpleMessage time={props.time} message={props.message}/>\n        </div>\n    );\n}\n\nconst SimpleMessage = (props) => {\n    return(\n        <div>\n            <span className=\"simple-message__date\">{props.time}</span>\n            {props.message}\n        </div>\n    );\n}\n\n\nconst FirstMessage = (props) => {\n    return(\n        <div className=\"message-foreword\">\n            <span className=\"foreword-title\">test1234</span>\n            <span className=\"foreword-description\">You created this channel on {props.creationDate}. This is the very beginning of the <b>{props.channelName}</b> channel.</span>\n            <span className=\"foreword-buttons-container\">\n                <ForeWordButton label={\"Set a description\"} icon={<PenIcon />}/> \n                <ForeWordButton label={\"Add an app\"} isDisabled={true} icon={'+'}/> \n                <ForeWordButton label={\"Add people to this channel\"} icon={<UserIcon />}/> \n            </span>\n        </div>\n    );\n}\n\nconst ForeWordButton = (props) => {\n    return(\n        <div className={props.isDisabled ? \"foreword-buttons disabled\" : \"foreword-buttons enabled\"}>\n            <span className=\"foreword-icon\">{props.icon}</span>{props.label} \n        </div>\n    )\n}\n\nconst TimeSeperator = (props) => {\n\n    let shouldDisplay = false;\n\n    const timeBetweenMessages = (props) => {\n\n        const timeBetweenLastMessage = moment.duration(props.messageTime.diff(props.lastMessage, 'days'));\n\n        if (timeBetweenLastMessage > 1) {\n            shouldDisplay = true\n        }\n    }\n\n    return(\n        <div>\n            {shouldDisplay ? <div>-- HERE WE WILL HAVE DATE SEPERATOR --</div> : null}\n            \n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}